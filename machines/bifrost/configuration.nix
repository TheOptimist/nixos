{ pkgs, lib, ... }:

{
  imports = [
    ./hardware-configuration.nix
    ./shell.nix
    ./virtualisation.nix
  ];

#  nix.nixPath = [
#    "nixpkgs=/nix/var/nix/profiles/per-user/root/channels/nixos"
#    "nixos-config=/home/george/.nixos/flake.nix"
#    "/nix/var/nix/profiles/per-user/root/channels"
#  ];
  
  #nix.package = pkgs.nixFlakes;
  nix.settings.experimental-features = [ "nix-command" "flakes" ];

  # Use the systemd-boot EFI boot loader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  boot.plymouth.enable = true;

  # source: https://grahamc.com/blog/erase-your-darlings
  boot.initrd.postDeviceCommands = lib.mkAfter ''
    zfs rollback -r rpool/local/root@blank
  '';

  time.timeZone = "America/Toronto";

  security.sudo.wheelNeedsPassword = false;

  hardware.graphics = {
    enable = true;
    #driSupport = true;
    #driSupport32Bit = true;
    extraPackages = with pkgs; [ vaapiVdpau ];
  };

  networking.hostId = "0d5142d8";
  networking.hostName = "bifrost";

  networking.useDHCP = false;
  networking.interfaces.br0.useDHCP = true;
  networking.bridges.br0.interfaces = [ "enp7s0" ];
  
  systemd.services.NetworkManager.enable = false;
  systemd.services.NetworkManager-wait-online.enable = false;

  services.emacs = {
    enable = true;
    package = pkgs.emacs-unstable;
  };

  programs.gnupg.agent = {
    enable = true;
    enableSSHSupport = true;
  };
  
  environment.systemPackages = with pkgs; [
    emacs
    git
    kitty
    ripgrep
    discord
    devbox
    devpod
    fd
    firefox
    geekbench
    autorandr
    lastpass-cli
    element-desktop
    signal-desktop
    google-chrome
    microsoft-edge
    nvme-cli
    headsetcontrol
    obsidian
    gimp
    vivaldi
    dmidecode
    hwinfo
    lm_sensors
    openrgb
    via
    zoom-us
    teams-for-linux
    gnomeExtensions.appindicator
    usbutils
    podman
    leocad
    testdisk
    nil
    geekbench
  ];

  # virtualisation.docker = {
  #   rootless = {
  #     enable = true;
  #     setSocketVariable = true;
  #   };
  # };
  
  services.hardware.openrgb = {
    enable = true;
    motherboard = "amd";
  };

  programs.dconf.enable = true;

  fonts = {
    packages = with pkgs; [
      nerd-fonts.fira-code
      nerd-fonts.sauce-code-pro
      nerd-fonts.iosevka-term
      nerd-fonts.lekton
      nerd-fonts.overpass
      fanwood
      noto-fonts
      noto-fonts-emoji
      crimson-pro
      eb-garamond
      lato
    ];
    fontconfig = {
      defaultFonts = {
        serif = [ "NotoSerif" ];
        sansSerif = [ "NotoSans" ];
        monospace = [ "FiraCode Nerd Font Mono" ];
      };
    };
  };
  
  services.thermald.enable = true;
  environment.etc."sysconfig/lm_sensors".text = ''
    # Generated by sensors-detect on Tue May 23 10:16:55 2023
    # This file is sourced by /etc/init.d/lm_sensors and defines the modules to
    # be loaded/unloaded.
    #
    # The format of this file is a shell script that simply defines variables:
    # HWMON_MODULES for hardware monitoring driver modules, and optionally
    # BUS_MODULES for any required bus driver module (for example for I2C or SPI).

    HWMON_MODULES="nct6775"
  '';
  
  services.pcscd.enable = true;
  services.printing.enable = true;
  services.printing.drivers = [
    pkgs.epson-escpr
  ];
  services.avahi.enable = true;
  services.avahi.nssmdns4 = true;
  # for a WiFi printer
  services.avahi.openFirewall = true;

  # services.autorandr = {
  #   enable = true;
  #   defaultTarget = "working";
  #   profiles = {
  #     "working" = {
  #       fingerprint = {
  #         "DP-1" = "00ffffffffffff0010acc1d0545039301f1b0104a5351e783aad75a9544d9d260f5054a54b008100b300d100714fa9408180d1c00101565e00a0a0a02950302035000e282100001a000000ff0032394a3050373836303950540a000000fc0044454c4c205032343138440a20000000fd0031561d711c010a20202020202001f8020315b15090050403020716010611121513141f20023a801871382d40582c45000e282100001e011d8018711c1620582c25000e282100009ebf1600a08038134030203a000e282100001a7e3900a080381f4030203a000e282100001a0000000000000000000000000000000000000000000000000000000000000000000062";
  #         "DP-2" = "00ffffffffffff0010acc1d054454330271b0104a5351e783aad75a9544d9d260f5054a54b008100b300d100714fa9408180d1c00101565e00a0a0a02950302035000e282100001a000000ff0032394a3050373952304345540a000000fc0044454c4c205032343138440a20000000fd0031561d711c010a20202020202001d5020315b15090050403020716010611121513141f20023a801871382d40582c45000e282100001e011d8018711c1620582c25000e282100009ebf1600a08038134030203a000e282100001a7e3900a080381f4030203a000e282100001a0000000000000000000000000000000000000000000000000000000000000000000062";
  #         "DP-3" = "00ffffffffffff0010acc1d054414430271b0104a5351e783aad75a9544d9d260f5054a54b008100b300d100714fa9408180d1c00101565e00a0a0a02950302035000e282100001a000000ff0032394a3050373952304441540a000000fc0044454c4c205032343138440a20000000fd0031561d711c010a20202020202001db020315b15090050403020716010611121513141f20023a801871382d40582c45000e282100001e011d8018711c1620582c25000e282100009ebf1600a08038134030203a000e282100001a7e3900a080381f4030203a000e282100001a0000000000000000000000000000000000000000000000000000000000000000000062";
  #       };
  #       config = {
  #         "DP-1" = {
  #           enable = true;
  #           position = "0x0";
  #           mode = "2560x1440";
  #           rotate = "right";
  #         };
  #         "DP-2" = {
  #           enable = true;
  #           position = "1440x524";
  #           mode = "2560x1440";
  #           primary = true;
  #         };
  #         "DP-3" = {
  #           enable = true;
  #           position = "4000x0";
  #           mode = "2560x1440";
  #           rotate = "left";
  #         };
  #       };
  #     };
  #   };
  # };

  services.zfs = {
    autoScrub.enable = true;
    autoSnapshot.enable = true;
    # TODO: autoReplication
  };

  services.openssh = {
    enable = true;
    settings = {
      PermitRootLogin = "yes";
      PasswordAuthentication = true;
    };
  };

  services.xserver = {
    enable = true;
    displayManager.gdm.enable = true;
    displayManager.gdm.wayland = false;
    # Not really sure I like this approach tbh. It does work for the login screen, but autorandr
    # still needs to run on user login, otherwise the display characteristics are reset
    # displayManager.setupCommands = ''
    #   ${pkgs.xorg.xrandr}/bin/xrandr --output DP-1 --mode 2560x1440 --pos 0x0 --rotate right
    #   ${pkgs.xorg.xrandr}/bin/xrandr --output DP-2 --mode 2560x1440 --pos 1440x524 --rotate normal --primary
    #   ${pkgs.xorg.xrandr}/bin/xrandr --output DP-3 --mode 2560x1440 --pos 4000x0 --rotate left
    # '';
    desktopManager.gnome.enable = true;

  };

  services.libinput.enable = true;

  # Bus 003 Device 009: ID 1ea7:cc65 SHARKOON Technologies GmbH zoom65 wireless
  
  services.udev.packages = with pkgs; [
    via
    gnome-settings-daemon
  ];
  hardware.keyboard.qmk.enable = true;

  users = {
    mutableUsers = false;
    users = {
      root = {
        initialHashedPassword = "\$6\$4Wn3sb5O0PiXRtCw\$qTEslSEB0uFrWyoIuy7NpCxSH2GmuFfTRtnbDqb30MGZmLqpi7BmcZwC375VN0fkEYY6bGiiE9AlKlc6v0sa31";
        createHome = true;
        home = lib.mkDefault "/home/root";
      };

      george = {
        uid = 1000;
        isNormalUser = true;
        initialHashedPassword = "\$6\$I/LockFIWSLzZkLY\$xAftwpPCTzg/XwXq77UasTCRU89kF9fJLLFSabdbCaizouVO2Gw/jYfdQfOVtxrNXGwLMJj9JsGZiX5pp953l/";
        group = "users";
        extraGroups = [ "wheel" "libvirtd" "input" ];
        createHome = true;
        home = "/home/george";
        useDefaultShell = true;
      };
    };
  };

  # Modify webcam so it can be forwarded over RDP
  # https://gitlab.com/Remmina/Remmina/-/issues/2320
  # https://github.com/FreeRDP/FreeRDP/issues/6651
  # https://stackoverflow.com/questions/33719489/how-to-enable-usb-redirection-in-windows-10
  services.udev.extraRules = ''
    ACTION=="ADD", SUBSYSTEM=="usb", ATTRS{idVendor}=="046d", ATTRS{idProduct}=="085e", MODE="0777", SYMLINK+="webcam"
  '';

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. Itâ€˜s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "22.11"; # Did you read the comment?
}
